@startuml
title General Architecture of the Football Platform

skinparam componentStyle uml2
skinparam rectangle {
  shadowing false
  backgroundColor #EEE
}
skinparam database {
  backgroundColor #White
}
skinparam actor {
   backgroundColor #LightBlue
}

actor "User (Visitor)" as User
actor "Administrator" as Admin

rectangle "Client (Browser)" as Client {
  rectangle "Single Page App (SPA)\n(React, TypeScript)" as SPA
}

package "Backend (API Server) - Java Spring Boot" {
  component "Controllers" as Controllers

  package "Business Logic & Data" {
    component "Competition Service" as CompSvc
    component "Match Service" as MatchSvc
    component "Player Service" as PlayerSvc
    component "Team Service" as TeamSvc
    component "Scheduling Service" as SchedSvc
  }

  component "Repositories" as Repositories
}

database "Database\n(MySQL)" as DB

' --- User -> Client Relationships ---

User --> SPA : View (Read-Only)
Admin --> SPA : Manage (Full CRUD)

note right of User
  Public access, no account required.
  Only read requests (GET).
end note

note right of Admin
    Unlimited access.
end note

' --- Client -> Backend Relationships ---

SPA --> Controllers : HTTP Requests


' The controller directs requests to the corresponding services
Controllers --> CompSvc
Controllers --> MatchSvc 
Controllers --> TeamSvc
Controllers --> PlayerSvc
Controllers --> SchedSvc

' --- Service -> Repository Relationships ---

CompSvc --> Repositories
MatchSvc --> Repositories
TeamSvc --> Repositories
SchedSvc --> Repositories
PlayerSvc --> Repositories

Repositories <--> DB

@enduml